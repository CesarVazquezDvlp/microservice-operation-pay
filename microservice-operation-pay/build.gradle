plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'java'
	id 'com.github.dockerjava.dockerjava' version '3.3.1'
}

group = 'com.microservice.operation.pay'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-parameters'
}

tasks.named('test') {
	useJUnitPlatform()
}

def dockerImageName = 'microservice-operation-pay'
def dockerfilePath = file('Dockerfile').path // Ruta al Dockerfile

task createDockerfile {
    doLast {
        def dockerFileContent = """
            FROM eclipse-temurin:17-jre
            VOLUME /tmp
            COPY build/libs/microservice-operation-pay-0.0.1-SNAPSHOT.jar app.jar
            ENTRYPOINT ["java","-jar","/app.jar"]
        """.stripIndent()
        file('Dockerfile').text = dockerFileContent
    }
}

tasks.named('docker').configure {
    dependsOn createDockerfile
}

docker {
    name = dockerImageName
    dockerfile = dockerfilePath
    buildArgs = [
            "JAR_FILE": "microservice-operation-pay-0.0.1-SNAPSHOT.jar"
    ]
}
